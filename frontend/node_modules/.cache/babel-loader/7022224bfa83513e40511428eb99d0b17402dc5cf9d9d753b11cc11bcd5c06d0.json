{"ast":null,"code":"var _jsxFileName = \"/Users/sarahalsaady/Desktop/repos/delivery-cost-calculator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport CarForm from './components/CarForm'; // Importing the CarForm component\nimport LocationForm from './components/LocationForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to hold the calculated distance\n  const [distance, setDistance] = useState(null);\n  const [gasPrice, setGasPrice] = useState(null);\n  const [fuelConsumption, setFuelConsumption] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [postalCode, setPostalCode] = useState(null);\n  //const [formValues, setFormValues] = useState({})\n  const [carFormValues, setCarFormValues] = useState({});\n  const [locationFormValues, setLocationFormValues] = useState({});\n  const handleCarFormChange = e => {\n    setCarFormValues({\n      ...carFormValues,\n      [e.target.id]: e.target.value\n    });\n  };\n  const handleLocationFormChange = e => {\n    setLocationCarFormValues({\n      ...locationFormValues,\n      [e.target.id]: e.target.value\n    });\n  };\n  // Dummy data for user and restaurant locations\n  //const userLocation = { lat: '45.4215', lng: '-75.6972' }; // Example user location\n  const restaurantLocation = {\n    lat: '45.287798',\n    lng: '-75.672958'\n  }; // Example restaurant location\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        setUserLocation({\n          latitude,\n          longitude\n        });\n        setLocationFormValues({\n          ...locationFormValues,\n          start: `${latitude}, ${longitude}`\n        });\n      }, error => {\n        console.error(\"Unable to retrieve your location.\", error);\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  // Function to handle distance calculation\n  const handleGetDistance = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/get_distance', {\n        user_location: `${locationFormValues.userLocation.latitude},${locationFormValues.userLocation.longitude}`,\n        restaurant_location: `${restaurantLocation.lat},${restaurantLocation.lng}`\n        // user_location: `${userLocation.latitude},${userLocation.longitude}`,\n        // restaurant_location: `${restaurantLocation.lat},${restaurantLocation.lng}`\n      });\n      console.log(\"Got the distance\");\n      setDistance(response.data.distance_km);\n    } catch (error) {\n      console.error(\"Error getting distance:\", error);\n    }\n  };\n  const handleGetPostalCode = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/get_postal_code', {\n        longitude: userLocation.longitude,\n        latitude: userLocation.latitude\n      });\n      setPostalCode(response.data.postal_code);\n    } catch (error) {\n      console.error(\"Error getting postal code:\", error);\n    }\n  };\n  const fetchGasPrice = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_gas_price');\n      setGasPrice(response.data.gas_price);\n    } catch (error) {\n      console.error(\"Error getting gas price\", error);\n    }\n  };\n  const handleFuelConsumption = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/get_fuel_consumption', {\n        year: carFormValues.year,\n        make: carFormValues.make,\n        model: carFormValues.model\n      });\n      // Set the fuel consumption from the response\n      setFuelConsumption(response.data.fuel_consumption);\n    } catch (error) {\n      console.error(\"Error getting fuel consumption:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Test Distance Calculation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationForm, {\n        formValues: locationFormValues,\n        handleChange: handleLocationFormChange,\n        handleGetDistance: handleGetDistance,\n        getUserLocation: getUserLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CarForm, {\n        formValues: carFormValues,\n        handleChange: handleCarFormChange,\n        handleFuelConsumption: handleFuelConsumption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), userLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"My Location: \", userLocation.latitude, \" \", userLocation.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 26\n      }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance: \", distance, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 22\n      }, this), gasPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gas Price: \", gasPrice, \" cents/L \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 22\n      }, this), fuelConsumption && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Combined Fuel Consumption: \", fuelConsumption, \" L/100km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }, this), postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Postal Code: \", postalCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rOpVa7xPqwivHA8AVfMjkSQyKgM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","CarForm","LocationForm","jsxDEV","_jsxDEV","App","_s","distance","setDistance","gasPrice","setGasPrice","fuelConsumption","setFuelConsumption","userLocation","setUserLocation","postalCode","setPostalCode","carFormValues","setCarFormValues","locationFormValues","setLocationFormValues","handleCarFormChange","e","target","id","value","handleLocationFormChange","setLocationCarFormValues","restaurantLocation","lat","lng","getUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","start","error","console","log","handleGetDistance","preventDefault","response","post","user_location","restaurant_location","data","distance_km","handleGetPostalCode","postal_code","fetchGasPrice","get","gas_price","handleFuelConsumption","year","make","model","fuel_consumption","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formValues","handleChange","_c","$RefreshReg$"],"sources":["/Users/sarahalsaady/Desktop/repos/delivery-cost-calculator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport CarForm from './components/CarForm';  // Importing the CarForm component\nimport LocationForm from './components/LocationForm'\n\nfunction App() {\n  // State to hold the calculated distance\n  const [distance, setDistance] = useState(null)\n  const [gasPrice, setGasPrice] = useState(null)\n  const [fuelConsumption, setFuelConsumption] = useState(null)\n  const [userLocation, setUserLocation] = useState(null)\n  const [postalCode, setPostalCode] = useState(null)\n  //const [formValues, setFormValues] = useState({})\n  const [carFormValues, setCarFormValues] = useState({});\n  const [locationFormValues, setLocationFormValues] = useState({});\n\n  const handleCarFormChange = (e) => {\n    setCarFormValues({ ...carFormValues, [e.target.id]: e.target.value })\n  }\n  const handleLocationFormChange = (e) => {\n    setLocationCarFormValues({ ...locationFormValues, [e.target.id]: e.target.value })\n  }\n  // Dummy data for user and restaurant locations\n  //const userLocation = { lat: '45.4215', lng: '-75.6972' }; // Example user location\n  const restaurantLocation = { lat: '45.287798', lng: '-75.672958' } // Example restaurant location\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          setUserLocation({ latitude, longitude });\n          setLocationFormValues({ ...locationFormValues, start: `${latitude}, ${longitude}` });\n        },\n        (error) => {\n          console.error(\"Unable to retrieve your location.\", error);\n        }\n      );\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  // Function to handle distance calculation\n  const handleGetDistance = async (e) => {\n    e.preventDefault()\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/get_distance', {\n        user_location: `${locationFormValues.userLocation.latitude},${locationFormValues.userLocation.longitude}`,\n        restaurant_location: `${restaurantLocation.lat},${restaurantLocation.lng}`\n        // user_location: `${userLocation.latitude},${userLocation.longitude}`,\n        // restaurant_location: `${restaurantLocation.lat},${restaurantLocation.lng}`\n      });\n      console.log(\"Got the distance\")\n      setDistance(response.data.distance_km);\n    } catch (error) {\n      console.error(\"Error getting distance:\", error)\n    }\n  }\n\n  const handleGetPostalCode = async() => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/get_postal_code', {\n        longitude: userLocation.longitude,\n        latitude: userLocation.latitude\n      })\n      setPostalCode(response.data.postal_code)\n    } catch (error) {\n      console.error(\"Error getting postal code:\", error)\n    }\n  }\n\n  const fetchGasPrice = async() => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_gas_price');\n      setGasPrice(response.data.gas_price);\n    } catch (error) {\n      console.error(\"Error getting gas price\", error)\n    }\n    }\n\n  const handleFuelConsumption = async (e) => {\n    e.preventDefault()\n  \n    try {\n      const response = await axios.post('http://127.0.0.1:5000/get_fuel_consumption', {\n        year: carFormValues.year,\n        make: carFormValues.make,\n        model: carFormValues.model\n      });\n      // Set the fuel consumption from the response\n      setFuelConsumption(response.data.fuel_consumption)\n    } catch (error) {\n      console.error(\"Error getting fuel consumption:\", error)\n    }\n  }\n    \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Test Distance Calculation</h1>\n        {/* <button onClick = {getUserLocation}>Get my location</button>\n        <button onClick={() => { handleGetDistance(); handleGetPostalCode() }}>Calculate Distance</button>\n        <button onClick = {fetchGasPrice}>Get Gas Price</button> */}\n        <LocationForm\n          formValues = {locationFormValues}\n          handleChange = {handleLocationFormChange}\n          handleGetDistance = {handleGetDistance}\n          getUserLocation = {getUserLocation}\n        ></LocationForm>\n        <CarForm\n          formValues = {carFormValues}\n          handleChange={handleCarFormChange}\n          handleFuelConsumption={handleFuelConsumption}\n        ></CarForm>\n        {userLocation && <p>My Location: {userLocation.latitude} {userLocation.longitude}</p>}\n        {distance && <p>Distance: {distance} km</p>}\n        {gasPrice && <p>Gas Price: {gasPrice} cents/L </p>}\n        {fuelConsumption && <p>Combined Fuel Consumption: {fuelConsumption} L/100km</p>}\n        {postalCode && <p>Postal Code: {postalCode}</p>}\n      </header>\n      \n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}