{"ast":null,"code":"var _jsxFileName = \"/Users/sarahalsaady/Desktop/repos/delivery-cost-calculator/frontend/src/components/LocationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getUserLocation = setUserLocation => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      const locationString = `${latitude}, ${longitude}`;\n      setUserLocation({\n        latitude,\n        longitude\n      }); // Update the state with user location\n    }, error => {\n      console.log(\"Unable to retrieve your location.\", error);\n    });\n  } else {\n    console.log(\"Geolocation is not supported by this browser.\");\n  }\n};\nconst LocationForm = ({\n  formValues,\n  handleChange,\n  handleGetDistance\n}) => {\n  _s();\n  const [userLocation, setUserLocation] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: () => handleGetDistance(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"start\",\n        children: \"Starting Point\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"start\",\n        value: formValues.start || userLocation || \" \",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        getUserLocation(setUserLocation);\n        console.log(userLocation);\n      },\n      children: \"Use my location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"restaurant\",\n        children: \"Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"restaurant\",\n        value: formValues.restaurant || \"\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(LocationForm, \"i8LhxxU72XKglq4O+4+x7Tnc+cs=\");\n_c = LocationForm;\nexport default LocationForm;\nvar _c;\n$RefreshReg$(_c, \"LocationForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","getUserLocation","setUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","locationString","error","console","log","LocationForm","formValues","handleChange","handleGetDistance","_s","userLocation","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","start","onChange","onClick","restaurant","_c","$RefreshReg$"],"sources":["/Users/sarahalsaady/Desktop/repos/delivery-cost-calculator/frontend/src/components/LocationForm.js"],"sourcesContent":["import React, {useState} from 'react'\n\nconst getUserLocation = (setUserLocation) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          const locationString = `${latitude}, ${longitude}`\n          setUserLocation({latitude, longitude}); // Update the state with user location\n        },\n        (error) => {\n          console.log(\"Unable to retrieve your location.\", error)\n        }\n      )\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\")\n    }\n}\n\nconst LocationForm = ({ formValues, handleChange, handleGetDistance}) => {\n    const [userLocation, setUserLocation] = useState(\"\")\n    return (\n        <form onSubmit={()=> handleGetDistance()}>\n            <div className='input-group'>\n                <label htmlFor=\"start\">Starting Point</label>\n                <input\n                  type=\"text\"\n                  id=\"start\"\n                  value={formValues.start || userLocation || \" \"}\n                  onChange={handleChange}\n                />\n            </div>\n            <button \n                type=\"button\"\n                onClick={()=>{getUserLocation(setUserLocation);console.log(userLocation)\n                }\n                }\n                >Use my location</button>\n            <div className='input-group'>\n                <label htmlFor=\"restaurant\">Restaurant</label>\n                <input\n                  type=\"text\"\n                  id=\"restaurant\"\n                  value={formValues.restaurant || \"\"}\n                  onChange={handleChange}\n                />\n            </div>\n            <button type=\"submit\" className = \"submit-btn\">Submit</button>\n        </form>\n    )\n}\n\nexport default LocationForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}